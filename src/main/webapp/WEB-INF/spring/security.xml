<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security-4.2.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<http use-expressions="true">
		<intercept-url pattern="/views/auth" access="isAnonymous()" />
		<intercept-url pattern="/views/resources/**" access="permitAll" />
		<intercept-url pattern="/views/*.css" access="permitAll" />
		<intercept-url pattern="/views/external/**" access="permitAll" />
		<intercept-url pattern="/views/jquery-ui.js" access="permitAll" />
		<intercept-url pattern="/views/**" access="hasRole('ROLE_USER')"/>
		<form-login
			login-page="/views/auth"
			default-target-url="/views/home"
			login-processing-url="/views/auth"
			authentication-failure-url="/views/auth?error=true"
			always-use-default-target="true" />
		<logout logout-url="/views/logout" />
		<csrf disabled="true"/>
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from production.users where username=?"
		  authorities-by-username-query=
		    "select username, role from production.user_roles where username =?  " />
	  </authentication-provider>
	</authentication-manager>
</beans:beans>